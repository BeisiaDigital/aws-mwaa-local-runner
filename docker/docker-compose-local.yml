version: "3.7"
services:
  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - "${PWD}/db-data:/var/lib/postgresql/data"

  local-runner:
    image: amazon/mwaa-local:2_9
    restart: always
    depends_on:
      - postgres
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=ap-northeast-1
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AIRFLOW__SMTP__SMTP_HOST=mail
      - AIRFLOW__SMTP__SMTP_STARTTLS=False
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes:
      - "${PWD}/dags:/usr/local/airflow/dags"
      - "${PWD}/plugins:/usr/local/airflow/plugins"
      - "${PWD}/requirements:/usr/local/airflow/requirements"
      - "${PWD}/startup_script:/usr/local/airflow/startup"
    ports:
      - "8080:8080"
    command: local-runner
    healthcheck:
      test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
      interval: 30s
      timeout: 30s
      retries: 3
    env_file:
      - ./config/.env.localrunner

  localstack:
    container_name: localstack
    image: localstack/localstack:stable
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=ap-northeast-1
      - SERVICES=s3,sqs,iam,sts,cloudwatch,events,kms,logs
      - DEBUG=1
    volumes:
      - "${LOCALSTACK_DATA_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"

  awscli:
    container_name: "awscli"
    image: mesosphere/aws-cli
    entrypoint: /bin/sh -c
    volumes:
      - "${PWD}/conf/:/root/conf/"
      - "${PWD}/docker/script/:/root/script/"
      - "${PWD}/docker/config/.aws/:/root/.aws/"
    command: /root/script/create-kif-infra.sh
    depends_on:
      - localstack
  
  terraform:
    container_name: "terraform"
    image: hashicorp/terraform:1.6.6
    volumes:
      - "${PWD}/terraform/:/terraform/"
      - "${PWD}/docker/config/.aws/:/root/.aws/"
    working_dir: "/terraform"
    entrypoint: /bin/sh -c
    command: |
      "
      terraform init -backend-config envs/local.tfbackend -reconfigure
      terraform apply -var-file envs/localstack.tfvars --auto-approve
      "
    depends_on:
      awscli:
        condition: service_completed_successfully

  mail:
    container_name: "mail"
    image: alpine
    entrypoint: /bin/sh -c
    ports:
      - "127.0.0.1:8025:25"
    volumes:
      - "${PWD}/docker/config/main.cf:/etc/postfix/main.cf"
    command: |
      "
      apk update && apk upgrade
      apk add postfix
      cd /etc/postfix && postmap aliases
      postfix start-fg
      "